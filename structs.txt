 

struct MATRIX {
    short m[3][3];
    long t[3];
};

struct Vec3 {
    int x;
    int y;
    int z;
};

struct SVec3 {
    short x;
    short y;
    short z;
};




// in-memory filesystem (loaded from .MR files)

struct RegDir {
    byte b0;
    sbyte b1;
    ushort cnt;
    struct RegFile * ch_files;
    struct RegDir * ch_dirs;
    struct RegDir * next;
    char nam[4]; // variable size
};

struct RegFile {
    sbyte b0;
    sbyte b1;
    ushort cnt;
    struct RegFile * next;
    char nam[4]; // variable size
};





// in-game OBJECT 'class' descriptor

struct ObjTyInfo {
    char * nam;
    int size;
    struct RegDir * my_dir;
    void * func_class_ctor;
    void * mb_func_10;
    void * func_proc;
    int dunno18;
    void * func_on_destr;
};


// in-game object INSTANCE head

struct Obj {
    int ind;
    char * f_04_name;
    struct Obj * f_08_prev;
    struct Obj * f_0c_next;
    struct Obj * f_10_int_prev;
    struct Obj * f_14_int_next;
    short f_18_px;
    short f_1a_py;
    short f_1c_pz;
    short f_1e_int_rad;
    u_char b0;
    u_char flagz;
    char type_index;
    u_char b3;
    void * proc_func;
    void * linkage_related;
    void * maybe_func_on_destr;
    int func_interact_shit;
    void * p_owner;
    void * p_unk38_inter_extender;
};




struct RayHitRes {
    int xx;
    int yy;
    int zz;
    short sx;
    short sy;
    short sz;
    short pp;
    void * ptr_a;
    void * ptr_b;
};




struct DispFaceHead {
    u_char b0;
    u_char b1;
    u_char b2;
    u_char b_code;
    u_char vinds[4];
};



struct LodEntry {
    u_char num_v;
    u_char num_f;
    ushort first_v;
    struct DispFaceHead * p_face_data;
};


// world piece

struct SquareData {
    uint f_00_amb_lite;
    uint f_04_amb_lite2;
    u_char f_08_dunno;
    u_char f_09_col_rel;
    ushort f_0a_col_index;
    struct Obj * f_0c_link_objs;
    struct Obj * f_10_link_objs2;
    struct SquareData * f_14_another_sq;
    struct SquareData * f_18_ptr_sq1;
    struct SquareData * f_1c_ptr_sq2;
    struct SquareData * f_20_ptr_sq3;
    struct SquareData * f_24_ptr_sq4;
    struct LodEntry f_28_lod[2];
};






struct WorldObjInfo {
    int f_00_disp_rel;
    struct WorldObjDispFaceInfo_unk_sz * f_04_ptr_display_face_info;
    void * f_08_ptr_display_face_vert_info;
    struct WorldObjDispVertInfo * f_0c_ptr_display_vertex_info;
    int f10_u1;
    struct WoColPolyInfo * f14_ptr_col_poly_info;
    void * f18_ptr_u3;
};




struct WorldObjDispVertInfo {
    int f_00_fi;
    int f_04_num_v;
    int f_08_v_off;
    undefined field_0xc;
    undefined field_0xd;
    undefined field_0xe;
    undefined field_0xf;
    undefined field_0x10;
    undefined field_0x11;
    undefined field_0x12;
    undefined field_0x13;
    struct SVECTOR * f_14_ptr_verts;
};

struct WoColPolyInfo {
    int num;
    void * ptr4;
    void * ptr8;
};


struct InterListElem {
    void * ptr_obj_juice;
    uint time;
    struct InterListElem * next;
};


struct InterList {
    struct InterListElem * p_start;
};



//---------------------------------

// 0x14    destroyable walls n stuff
struct ObjDestroyable {
    int f_00_hp;
    char * f_04_snd_name;
    struct RegDir * f_08_my_dir;
    struct WorldObjInfo * f_0c_wo_info;
    struct InterList f_10_inter_list;
};




struct BulletProjectile {
    char * f0_owned_string;
    char * f4_str2;
    struct SVECTOR f8_seg0;
    struct SVECTOR f10_seg1;
    short f18_xx;
    short f1a_yy;
    short f1c_zz;
    byte f1e_b;
    byte f1f_c;
    struct RayHitRes f20_hit_res;
    byte * f3c_ptr_obj_juice;
    struct SVec3 f40_hit_cp;
};


// 0x48  - machine guns
struct ObjBullet {
    struct BulletProjectile f0_proj;
    short f46_dmg;
};


// 0x6C
struct ObjCamera {
    struct MATRIX mtx;
    struct MATRIX mtx2;
    struct MATRIX mtx3;
    byte * trg_obj;
    byte * trg_cam_state;
    void * trg_cam_proc;
};

// 0x30   - glow / flares
struct ObjAfc {
    short f_00_sz;
    short f_02_sz2;
    short f_04_rot_z;
    short f_06_rot;
    byte f_08_clr[4];
    byte f_0c_clr2[4];
    struct SVECTOR f_10_maybe_verts[4];
};

// 0x40
struct ObjTeleporter {
    struct SVECTOR f00_dst_pos;
    struct SVECTOR f08_dst_dir;
    struct MATRIX f10_mtx; 
    short f30_sz;
    short f32_index_stuff;
    short f34_angle;
    short f36_fluct;
    int f38;
    uint * f3c_ptr_color;
};


// 0x24  -  health / weapon  pickups
struct ObjPowerup {
    char * f_00_nam;
    ushort f_04_amount;
    short f_06_unk;
    ushort f_08_unk2;
    short f_0a_unk;
    short f_0c_unk_c;
    short f_0e_maybe_rot_y;
    struct SVECTOR sv10;
    void * f_18_func_interact_car_with_pwr;
    char * snd_name;
    uint disp_rel;
};

// 0x2C   - delayed func call
struct ObjTimer {
    int f0_counter;
    void * f4_func;
    int f8_mode;
    int ca_arg0;
    int ca_arg1;
    int ca_arg2;
    int ca_arg3;
    int * ptr_to_unk1;
    int * ptr_to_unk2;
    int * ptr_to_unk3;
    int f_28_dunno;
};



// 0xC0   pieces of destroyed walls
struct ObjFragment {
    struct SVECTOR f_08_pp;
    struct Vec3 f_08_vc;
    struct Vec3 f_14_some_vec;
    int f_20_unk1;
    struct SVECTOR f_24_maybe_verts[4];
    struct MATRIX f_44_mtx;
    int f_64_raycast_delay;
    int f_68_u1;
    int f_6c;
    int f_70;
    int f_74;
    int f_78;
    int f_7c;
    int f_80;
    int f_84;
    int f_88;
    int f_8c_i;
    u_char f_90_maybe_prim_copy[48];
};



// 0x38
struct ExpDefinition {
    char * f_00_name;
    char * f_04_ptr_snd_name;
    uint * f_08_ptr_clr;
    void * f_0c_tex;
    ushort f_10_height;
    ushort f_12_dmg;
    ushort f_14_trans;
    ushort f_16_color_reducer;
    ushort f_18_rot;
    ushort f_1a_disp_type;
    int f_1c_life;
    int f_20_outer_vel;
    int f_24_inner_vel;
    int f_28_friction;
    int f_2c_force;
    ushort f_30_num_sides;
    u_char f_32_freeze;
    u_char f_33_fire;
    ushort f_34_ray_check;
    ushort f_36_collide_check;
};


// 0x44
struct ObjExplosionShockWave {
    struct SVECTOR * f_00_allocated_stuff;
    ushort f_04_height;
    ushort f_06_dmg;
    uint * f_08_ptr_clr;
    int f_0c_life;
    int f_10_inner_vel;
    int f_14_outer_vel;
    int f_18_fric;
    short f_1c_u10;
    short f_1e_radius_related;
    short f_20_dunn;
    short f_22_u_cnt;
    int f_24_force;
    struct InterList f_28_inter_list;
    struct SVECTOR f_2c_sv_maybe_velocity;
    int f_34_dunno;
    char * f_38_ptr_snd_name;
    void * f_3c_ptr_tex;
    struct ExpDefinition * f_40_my_def;
};

// 0x74
struct ObjCarpart {
    struct SVECTOR f_00_pos;
    struct Vec3 f_08_vc0;
    struct Vec3 f_14_vc1;
    int f_20_dunno;
    struct MATRIX f_24_mtx1;
    struct MATRIX f_44_mtx2;
    int f_64_val;
    void * f_68_ptr1;
    void * f_6c_ptr_uuu;
    void * f_70_ptr_g;
};

//------------------------------------


struct ObjCameraParamz {
    void * f_00_trg_obj;
};


struct ObjAfcParamz {
    struct SVec3 * f_00_ptr_pos;
    uint * f_04_p_clr;
    int f_08_rot;
    int f_0c_sz;
    int f_10_got_lite;
};


struct ObjTeleporterParamz {
    struct SVECTOR * p_pos;
    int radius;
    struct SVECTOR * p_dst_pos;
    struct SVECTOR * p_dst_dir;
    uint * p_clr;
};

struct ObjCarpartParamz {
    struct VECTOR * f_00_pos;
    struct VECTOR * f_04_unk;
    struct MATRIX * f_08_matrix;
    void * f_0c_ptr_cc;
    void * f_10_ptr_uuu;
    void * f_14_ptr_ggg;
};
